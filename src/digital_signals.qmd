# Digital Signals

## Dynamic Range

Dynamic range describes the ratio of the amplitude of the loudest possible
undistorted signal to the noise floor. @Mller2021

$$
DR_{analog} = 20\log_{10} \left(\frac{V_{ceiling}}{V_{floor}}\right)
$$ {#eq-dynamic-range-analog}

The maximum achievable dynamic range for a digital audio system with Q-bit
uniform quantization is defined in @eq-dynamic-range-digital:

$$
\begin{split}
    DR_{digital} & = 20\log_{10} \left(\frac{2^Q}{1}\right) \\
                 & = 6.02 * Q
\end{split}
$$ {#eq-dynamic-range-digital}

| Bit-Depth | Dynamic Range (dB) |           Application           |
| :-------: | :----------------: | :-----------------------------: |
|     8     |       48.16        |         Legacy Hardware         |
|    12     |       72.24        |         Legacy Hardware         |
|    16     |       96.32        |            Audio-CD             |
|    24     |       144.49       |      High-quality ADC/DAC       |
|    32     |       192.65       | Digital Audio Workstation (DAW) |
|    64     |       385.31       |      Scientific Computing       |

: Dynamic-Range for given Bit-Depth {#tbl-bit-depth}

## Crest Factor

When choosing quantization for any signal $x[t]$ your SNR for the quantization
noise is determined by the crest factor of the signal which is the peak divided
by the RMS value, i.e.

$$
C_x = \frac{x_{peak}}{x_{rms}}
$$ {#eq-crest-factor}


However the Crest factor in the frequency domain can be much higher. An extreme
case is a full scale sine wave, which has a crest factor of roughy

$$
C_{sine,frequency} = \sqrt{\frac{M_{FFT}}{2}}
$$ {#eq-crest-factor-sine-fft}

Where $M_{FFT}$ is the FFT length. For an FFT length of 2048 and 16 bit
quantization this comes out to be a whopping 30 dB, reduces your SNR to the
70 dB range.

You have to decide whether this is acceptable for your application or you have
to deploy some dynamic stage scaling scheme in your FFT.

See full conversation of dsp.stackexchange.com ^[What are the theoretical
maximum values of the complex bins in an unscaled FFT of size N?
<https://dsp.stackexchange.com/questions/91811>]

## Quantization

If you quantize with N bits at the clipping level, your quantization step, will
be (assuming signed signals)

$$
\Delta_q = \frac{x_{peak}}{2^{N-1}}
$$ {#eq-quantization-step}

and the quantization noise in dB is

$$
\begin{split}
    L_q & = 20\log_{10} \frac{\Delta_q}{\sqrt{12}} \\
        & = 20\log_{10} \frac{x_{peak}}{2^{N-1}\sqrt{12}}
\end{split}
$$ {#eq-quantization-noise}

and you SNR becomes

$$
\begin{split}
    SNR & = 20\log_{10} x_{rms} - L_q \\
        & = 20\log_{10} 2^{N-1}\sqrt{12}\frac{x_{rms}}{x_{peak}} \\
        & = 20\log_{10} \frac{2^{N-1}\sqrt{12}}{C_x}
\end{split}
$$ {#eq-quantization-snr}

So it's inversely proportional to the Crest factor. Most audio signals have a
moderate Crest factor in the time domain, maybe 15 dB or so, which gives you
an SNR of 86dB or thereabouts for 16-bit quantization. Not great, but not
terrible either.

## Dithering

### Rectangle

### Triangle

### Noise Shaping
